@using NatureQuestWebsite.Models
@using NatureQuestWebsite.Services
@inherits Umbraco.Web.Mvc.UmbracoViewPage<MembersModel>
@{
    if (Model.LoggedInMember != null && Model.IsAdminUser)
    {
        @Html.Partial("/Views/Partials/Accounts/AccountsSideBar.cshtml", Model)
        var listPaging = Model.AdminOrdersPaging;
        var currentPage = Model.StripeOrdersPage;

        <div class="col-lg-9">
            <div class="padding-top-2x mt-2 hidden-lg-up"></div>
            @if (Model.PagedAdminOrders.Any())
            {
                <div class="row">
                    <div class="col-5">
                        <h4 class="margin-bottom-1x">
                            Site Orders
                        </h4>
                    </div>
                    <div class="col-7 text-right">
                        @if (listPaging.TotalPages > 1)
                        {
                            <span>Showing:&nbsp;page @listPaging.CurrentPage of @listPaging.TotalPages pages</span>
                        }
                    </div>
                </div>

                <div class="table-responsive">
                    <table class="table table-hover margin-bottom-none">
                        <thead>
                        <tr>
                            <th style="width: 15%;">Order #</th>
                            <th style="width: 25%;">Order Date</th>
                            <th style="width: 45%;">Status</th>
                            <th style="width: 15%;">Total</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var orderDetail in Model.PagedAdminOrders)
                        {
                            var orderDisplayedStatus = "Pending";
                            if (orderDetail.OrderPaidSuccess && !orderDetail.OrderShipped)
                            {
                                orderDisplayedStatus = "Processing";
                            }
                            else if (orderDetail.OrderPaidSuccess && orderDetail.OrderShipped && !orderDetail.OrderCompleted)
                            {
                                orderDisplayedStatus = "Shipped";
                            }
                            else if (orderDetail.OrderPaidSuccess && orderDetail.OrderShipped && orderDetail.OrderCompleted)
                            {
                                orderDisplayedStatus = "Completed";
                            }

                            var displayedOrderId = !string.IsNullOrWhiteSpace(orderDetail.OrderId) ?
                                orderDetail.OrderId :
                                orderDetail.OrderPaymentIntent.Id;

                            <tr>
                                <td style="width: 15%;">
                                    @if (Model.IsAdminUser && !string.IsNullOrWhiteSpace(orderDetail.OrderPaymentIntent?.Id))
                                    {

                                        var stripeOrderLink = $"https://dashboard.stripe.com/payments/{orderDetail.OrderPaymentIntent.Id}";
                                        <a class="navi-link text-break" href="@stripeOrderLink" target="_blank" title="Stripe Order Details">
                                            @displayedOrderId
                                        </a>
                                    }
                                    else
                                    {
                                        <a class="navi-link text-break">@displayedOrderId</a>
                                    }
                                </td>
                                <td style="width: 25%;">
                                    @orderDetail.OrderCreatedDate.ToString("D")
                                </td>
                                <td style="width: 45%;">
                                    <span class="text-success">@orderDisplayedStatus</span>
                                    <div class="form-group">
                                        <div class="custom-control custom-checkbox custom-control-inline">
                                            @Html.CheckBoxFor(model => orderDetail.OrderPaidSuccess, new { @class = "custom-control-input" })
                                            <label class="custom-control-label">Paid?</label>
                                        </div>

                                        <div class="custom-control custom-checkbox custom-control-inline">
                                            @Html.CheckBoxFor(model => orderDetail.OrderShipped, new { @class = "custom-control-input" })
                                            <label class="custom-control-label">Shipped?</label>
                                        </div>

                                        <div class="custom-control custom-checkbox custom-control-inline">
                                            @Html.CheckBoxFor(model => orderDetail.OrderCompleted, new { @class = "custom-control-input" })
                                            <label class="custom-control-label">Completed?</label>
                                        </div>
                                    </div>
                                </td>
                                <td style="width: 15%;">
                                    <span class="text-medium">@orderDetail.OrderTotal.ToString("c")</span>
                                    <div class="text-left">
                                        <a class="btn btn-sm btn-link-primary margin-left-none margin-right-none padding-left-none padding-right-none"
                                           href="" data-toggle="modal" data-target="#orderDetails-@displayedOrderId">
                                            <i class="icon-download"></i>&nbsp;Invoice
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>

                if (listPaging.TotalPages > 1)
                {
                    <nav class="pagination">
                        <div class="column">
                            <ul class="pages">
                                @Html.PagingLink(listPaging, currentPage.Url, useSorting: false)
                            </ul>
                        </div>
                    </nav>
                }
            }
            else
            {
                <div class="alert alert-danger alert-dismissible fade show text-center margin-bottom-1x">
                    <span class="alert-close" data-dismiss="alert">
                    </span>
                    <i class="icon-ban"></i>&nbsp;&nbsp;<strong>There are currently no orders available.</strong>
                </div>
            }

            <hr>
        </div>

    }
}